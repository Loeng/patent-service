<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的UserRealm.java -->
	<bean id="userRealm" class="org.patent.shiro.UserRealm"/>
	
	<bean id="redisListerner" class="org.patent.listener.RedisSessionListener"/> 
	
	<bean id="redisSessionDao" class="org.patent.shiro.SessionRedisDao"/>
	
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置session过期时间为1小时(单位：毫秒)，默认为30分钟 -->
		<property name="globalSessionTimeout" value="3600000"></property>
		<!-- 定时巡检session失效时间,基本上与session超时时间相近 -->
		<property name="sessionValidationInterval" value="3600000"></property>
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<property name="sessionListeners">
		     <list>
		          <ref bean="redisListerner"/>
		     </list>
		</property>
		<property name="sessionDAO" ref="redisSessionDao"/>
	</bean>
	
    <bean id="securityManager" class="org.patent.shiro.IgnoreNullSessionSecurityManager">
		<property name="sessionManager" ref="sessionManager"></property>
	    <property name="realm" ref="userRealm"/>
	</bean> 
	
    <bean id="shareAuth" class="org.patent.shiro.ShareAuthenFilter">
        <property name="sessionDao" ref="redisSessionDao"/>
    </bean>
    
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>  
	    <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.html"页面 -->  
	    <property name="loginUrl" value="/login.html"/>  
	    <!-- 登录成功后要跳转的连接 -->  
	    <property name="successUrl" value="/index.html"/>
	    <!-- 用户访问未对其授权的资源时,所显示的连接 -->   
	    <property name="unauthorizedUrl" value="/login.html"/> 
	    <!-- Shiro连接约束配置,即过滤链的定义 -->   
	    <!-- anon：它对应的过滤器里面是空的 -->  
	    <!-- authc：该过滤器下的页面必须验证后才能访问-->  
	    <property name="filterChainDefinitions">  
	        <value>
	        	/js/**=anon
	        	/statics/**=anon
				/api/**=anon
	        	/login.html=anon
	        	/sys/login=anon
	        	/app-store/**=anon
	        	/google-map/**=anon
				/swagger-ui/**=anon
	        	/**=authc
	        </value>
	    </property>
	    <property name="filters">
	         <map>
	              <entry key="authc" value-ref="shareAuth"/>
	         </map>
	    </property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>